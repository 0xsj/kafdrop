apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}        
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: KAFKA_BROKERCONNECT
            value: "{{ .Values.kafka.brokerConnect }}"
          - name: KAFKA_PROPERTIES
            value: "{{ .Values.kafka.properties }}"
          - name: KAFKA_TRUSTSTORE
            value: "{{ .Values.kafka.truststore }}"
          - name: KAFKA_KEYSTORE
            value: "{{ .Values.kafka.keystore }}"
          - name: JVM_OPTS
            value: "{{ .Values.jvm.opts }}"
{{- if .Values.jmx.port }}
          - name: JMX_PORT
            value: "{{ .Values.jmx.port }}"
{{- end }}
{{- if .Values.host }}
          - name: HOST
            value: "{{ .Values.host }}"
{{- end }}
{{- if .Values.server.servlet.contextPath }}
          - name: SERVER_SERVLET_CONTEXTPATH
            value: "{{ .Values.server.servlet.contextPath }}"
{{- end }}
{{- if .Values.kafka.properties_file }}
          - name: KAFKA_PROPERTIES_FILE
            value: "{{ .Values.kafka.properties_file }}"
{{- end }}
{{- if .Values.kafka.truststore_file }}
          - name: KAFKA_TRUSTSTORE_FILE
            value: "{{ .Values.kafka.truststore_file }}"
{{- end }}
{{- if .Values.kafka.keystore_file }}
          - name: KAFKA_KEYSTORE_FILE
            value: "{{ .Values.kafka.keystore_file }}"
{{- end }}
{{- if .Values.server.port }}
          - name: SERVER_PORT
            value: "{{ .Values.server.port }}"
{{- end }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "{{ .Values.server.servlet.contextPath }}actuator/health"
              port: http
            initialDelaySeconds: 180
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: "{{ .Values.server.servlet.contextPath }}actuator/health"
              port: http
            initialDelaySeconds: 20
            periodSeconds: 5
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
